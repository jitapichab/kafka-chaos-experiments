version: '3.8'

services:
  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    networks:
      - poke-orders

  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_CREATE_TOPICS: "poke-orders:1:1,poke-orders-state:1:1"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - zookeeper
    networks:
      - poke-orders

  postgres:
    image: postgres:16.3
    container_name: postgres
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: poke_orders
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - poke-orders

  poke-order-api:
    image: jitapichab/poke-order-api:v0.1.0-test
    container_name: fastapi
    environment:
      DATABASE_URL: postgresql+asyncpg://user:password@postgres:5432/poke_orders
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: user
      DB_PASSWORD: password
      DB_NAME: poke_orders
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      KAFKA_CLIENT_ID: poke-producer
      KAFKA_TOPIC: poke-orders
      KAFKA_ACKS: all
      RETRIES: 3
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - kafka
    networks:
      - poke-orders

  detective-pikachu:
    build: ./detective-pikachu
    container_name: detective-pikachu
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      PRODUCER_CLIENT_ID: poke-producer
      PRODUCER_TOPIC: poke-orders-state
      CONSUMER_GROUP_ID: poke-order-consumer
      CONSUMER_TOPIC: poke-orders
    depends_on:
      - poke-order-api
    networks:
      - poke-orders

  order-reversed:
    build: ./order-reversed
    container_name: order-reversed
    environment:
      DB_PORT: 5432
      DB_USER: user
      DB_PASSWORD: password
      DB_NAME: poke_orders
      EXPIRED_ORDER_TIME: 1
    depends_on:
      - poke-order-api
    networks:
      - poke-orders

  order-updater:
    build: ./order-updater
    container_name: order-updater
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      CONSUMER_GROUP_ID: order-updater
      CONSUMER_TOPIC: poke-orders-state
      URL_POKE_ORDER_API: http://poke-order-api:8000/orders
    depends_on:
      - poke-order-api
    networks:
      - poke-orders

networks:
  poke-orders:
    driver: bridge

volumes:
  postgres_data: